{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/feltembeddedcare\/documentation"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/feltembeddedcare\/documentation"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Initialization","text":"Initialization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Primary interaction with the SDK is mediated through the "},{"isActive":true,"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/shared","type":"reference"},{"type":"text","text":" singleton."}]},{"type":"paragraph","inlineContent":[{"text":"At app launch, initialize the SDK with your SDK key using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/initialize(sdkKey:)"},{"text":".","type":"text"}]},{"type":"heading","level":3,"anchor":"UIKit","text":"UIKit"},{"type":"codeListing","syntax":"swift","code":["import FeltEmbeddedCare","","let feltSDKKey = \"...\"","","class AppDelegate: UIApplicationDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","        Task {","            do {","                try await EmbeddedCare.shared.initalize(sdkKey: feltSDKKey)","                \/\/ Update any UI waiting on embedded care initialization","            } catch {","                \/\/ Error will be thrown for invalid key","            }","        }","    }","}"]},{"type":"heading","level":3,"anchor":"SwiftUI","text":"SwiftUI"},{"type":"codeListing","syntax":"swift","code":["import FeltEmbeddedCare","","let feltSDKKey = \"...\"","","@main","struct ClientApp: App {","","    @State var embeddedCareInitialized = false","","    init() {","        Task {","            do {","                try await EmbeddedCare.shared.initialize(sdkKey: sdkKey)","                embeddedCareInitialized = true","            } catch {","                \/\/ Error will be thrown for invalid key","            }","        }","    }","","}"]},{"type":"heading","level":2,"anchor":"User-Account-and-Patient-Details","text":"User Account and Patient Details"},{"type":"heading","level":3,"anchor":"Account","text":"Account"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once your app’s current user has been authenticated, provide their account details to the SDK using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/account"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let user = ...","EmbeddedCare.shared.account = Account(id: user.id, email: user.email)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the user logs out, inform the SDK by setting "},{"type":"reference","isActive":true,"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/account"},{"type":"text","text":" to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["EmbeddedCare.shared.account = nil"]},{"type":"heading","level":3,"anchor":"Selected-Patient","text":"Selected Patient"},{"type":"paragraph","inlineContent":[{"text":"The SDK considers the logged in person currently using your app to be a ","type":"text"},{"code":"patient","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Your user’s account may be the same person or a distinct person from the actual patient using your app.","type":"text"},{"text":" ","type":"text"},{"text":"For example, the account holder may be a parent and the patient may be their child.","type":"text"},{"text":" ","type":"text"},{"text":"Even if the account holder and patient represent the same person, take care to distinguish their ids","type":"text"},{"text":" ","type":"text"},{"text":"if your app’s data model keeps them distinct.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Set the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/Account\/selectedPatient"},{"type":"text","text":" property to provide patient details to the SDK for the currently logged in patient."}]},{"type":"codeListing","syntax":"swift","code":["let currentFamilyMember = ...","EmbeddedCare.shared.account?.selectedPatient = Patient(","    id: currentFamilyMember.id,","    relationshipToAccountHolder: .familyMember,","    email: currentFamilyMember.email,","    \/\/ Any custom information you want to provide","    custom: [\"notes\" : currentFamilyMember.notes]",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If any information changes about the account or the selected patient, just update "},{"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/account","type":"reference","isActive":true},{"type":"text","text":" with the latest information."}]},{"type":"heading","level":2,"anchor":"Component-Experiences","text":"Component Experiences"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to integrate Felt embedded care content alongside your app’s native content, use "},{"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/ComponentView","isActive":true},{"type":"text","text":", a "},{"type":"codeVoice","code":"UIView"},{"type":"text","text":" subclass, or "},{"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/Component","isActive":true},{"type":"text","text":", a "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"See the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/ComponentExperience"},{"text":" ","type":"text"},{"code":"enum","type":"codeVoice"},{"text":" for available options.","type":"text"}]},{"type":"heading","level":3,"anchor":"UIKit","text":"UIKit"},{"type":"codeListing","syntax":"swift","code":["let componentView = ComponentView(experience: .dismissableCallToAction, custom: [:])","self.view.addSubview(componentView)","..."]},{"type":"heading","level":3,"anchor":"SwiftUI","text":"SwiftUI"},{"type":"codeListing","syntax":"swift","code":["struct MyView: View {","    var body: some View {","        Component(experience: .dismissableCallToAction, custom: [:])","    }","}"]},{"type":"heading","level":3,"anchor":"Layout","text":"Layout"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Component contents may be loaded asynchronously, which means a component’s layout can change over time. A component determines its intrinsic height based on its current width."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both "},{"type":"codeVoice","code":"UIKit"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" components provide the ability to specify an "},{"type":"codeVoice","code":"onHeightUpdated"},{"type":"text","text":" handler that allows you to react to intrinsic height changes. For example, you can use this handler to animate layout changes."}]},{"type":"heading","level":2,"anchor":"Full-Screen-Experiences","text":"Full Screen Experiences"},{"type":"paragraph","inlineContent":[{"text":"Felt provides several full screen experiences you can explicitly present. See the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FullScreenExperience"},{"text":" ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":" for available options.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["EmbeddedCare.shared.presentExperience(.splashScreen)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"User interaction with components can automatically present full screen experiences."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternately, you can explicitly present full screen experiences using "},{"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FullScreenViewController","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FullScreenView","isActive":true},{"type":"text","text":"."}]},{"type":"heading","level":3,"anchor":"UIKit","text":"UIKit"},{"type":"codeListing","syntax":"swift","code":["let viewController = FullScreenViewController(experience: .pricingScreen)","viewController.modalPresentationStyle = .fullScreen","self.present(viewController, animated: true, completion: nil)","..."]},{"type":"heading","level":3,"anchor":"SwiftUI","text":"SwiftUI"},{"type":"codeListing","syntax":"swift","code":["struct MyView: View {","","    @State var shouldPresentEmbeddedCare = false","","    var body: some View {","        MyViewContent($shouldPresentEmbeddedCare)","            .fullScreenCover(isPresented: $shouldPresentEmbeddedCare) {","                FullScreenView(experience: .splashScreen)","            }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"The SDK will automatically modally present full screen experiences in response to user actions such as tapping a component.","type":"text"}]},{"type":"heading","level":2,"anchor":"Feature-Gating","text":"Feature Gating"},{"type":"paragraph","inlineContent":[{"text":"You can check if a feature is enabled for the current user by calling ","type":"text"},{"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/checkFeatureGate(_:)","isActive":true,"type":"reference"},{"text":". See the ","type":"text"},{"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FeatureGate","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":" for available options.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, before displaying a component, you should call "},{"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/checkFeatureGate(_:)","isActive":true,"type":"reference"},{"type":"text","text":" with the relevant feature gate to make sure the component should be displayed."}]},{"type":"codeListing","syntax":"swift","code":["if EmbeddedCare.shared.checkFeatureGate(.globalRollout) {","    \/\/ View logic to display `ComponentView`","}"]},{"type":"heading","level":2,"anchor":"Deep-Linking","text":"Deep Linking"},{"type":"paragraph","inlineContent":[{"text":"The SDK can handle certain deep-links to embedded care content through either urls or push notifications.","type":"text"},{"text":" ","type":"text"},{"text":"In your open-url and push notification handling code, call ","type":"text"},{"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/handleURL(_:)","isActive":true,"type":"reference"},{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/handleNotification(_:)","isActive":true,"type":"reference"},{"text":" respectively to give the SDK an opportunity to respond to a deep-link event.","type":"text"}]},{"type":"heading","level":2,"anchor":"Compatiblity","text":"Compatiblity"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SDK has minimum version requirements of Swift 5.5 and iOS 15."}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare"]]},"identifier":{"url":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/Documentation","interfaceLanguage":"swift"},"kind":"article","metadata":{"title":"Felt Embedded Care iOS SDK","role":"article","modules":[{"name":"FeltEmbeddedCare"}],"roleHeading":"Article"},"abstract":[{"type":"text","text":"Felt offers a seamless telehealth experience inside health apps. Our platform handles the full user lifecycle, including onboarding, payments, and doctor visits, ensuring a cohesive healthcare experience."}],"references":{"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/ComponentView":{"title":"ComponentView","abstract":[{"text":"A ","type":"text"},{"code":"UIView","type":"codeVoice"},{"text":" used to integrate Felt’s embedded care content alongside your app’s native ","type":"text"},{"code":"UIKit","type":"codeVoice"},{"text":" content.","type":"text"}],"type":"topic","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/ComponentView","kind":"symbol","url":"\/documentation\/feltembeddedcare\/componentview","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ComponentView","kind":"identifier"}],"navigatorTitle":[{"text":"ComponentView","kind":"identifier"}]},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/FeatureGate":{"kind":"symbol","title":"FeatureGate","type":"topic","url":"\/documentation\/feltembeddedcare\/featuregate","role":"symbol","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FeatureGate","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FeatureGate","kind":"identifier"}],"navigatorTitle":[{"text":"FeatureGate","kind":"identifier"}],"abstract":[{"text":"An enumeration of known features that can be checked for the current account","type":"text"}]},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/EmbeddedCare/account":{"type":"topic","abstract":[{"type":"text","text":"Provides details about the current user account."},{"type":"text","text":" "},{"type":"text","text":"Update this as information about the currently logged in user changes."}],"url":"\/documentation\/feltembeddedcare\/embeddedcare\/account","role":"symbol","kind":"symbol","title":"account","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"account"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16FeltEmbeddedCare7AccountV","text":"Account"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/account"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/EmbeddedCare/initialize(sdkKey:)":{"title":"initialize(sdkKey:)","role":"symbol","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/initialize(sdkKey:)","abstract":[{"text":"Call this at app launch to initialize the sdk.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sdkKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/feltembeddedcare\/embeddedcare\/initialize(sdkkey:)"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/FullScreenExperience":{"navigatorTitle":[{"text":"FullScreenExperience","kind":"identifier"}],"type":"topic","url":"\/documentation\/feltembeddedcare\/fullscreenexperience","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FullScreenExperience","title":"FullScreenExperience","abstract":[{"text":"An experience that is meant to take over your app’s UI","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FullScreenExperience","kind":"identifier"}]},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/Account/selectedPatient":{"abstract":[{"type":"text","text":"Represents information about the currently selected patient on the account."},{"type":"text","text":" "},{"type":"text","text":"Update this as information about the currently logged in patient changes."}],"kind":"symbol","role":"symbol","title":"selectedPatient","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/Account\/selectedPatient","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"selectedPatient"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16FeltEmbeddedCare7PatientV","text":"Patient"},{"kind":"text","text":"?"}],"url":"\/documentation\/feltembeddedcare\/account\/selectedpatient"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/Component":{"title":"Component","kind":"symbol","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"View"},{"text":" used to integrate Felt’s embedded care content alongside your app’s native ","type":"text"},{"type":"codeVoice","code":"SwiftUI"},{"text":" content","type":"text"}],"type":"topic","url":"\/documentation\/feltembeddedcare\/component","role":"symbol","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/Component","navigatorTitle":[{"kind":"identifier","text":"Component"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Component"}]},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/ComponentExperience":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentExperience"}],"navigatorTitle":[{"kind":"identifier","text":"ComponentExperience"}],"kind":"symbol","abstract":[{"type":"text","text":"An experience associated with a component view that is displayed alongside"},{"type":"text","text":" "},{"type":"text","text":"your app’s native content"}],"type":"topic","title":"ComponentExperience","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/ComponentExperience","role":"symbol","url":"\/documentation\/feltembeddedcare\/componentexperience"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/FullScreenView":{"role":"symbol","title":"FullScreenView","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FullScreenView","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"SwiftUI","type":"codeVoice"},{"text":" ","type":"text"},{"code":"View","type":"codeVoice"},{"text":" used to integrate Felt’s embedded care content.","type":"text"},{"text":" ","type":"text"},{"text":"The view is meant to be presented modally or in a way that takes up the majority of your app’s UI,","type":"text"},{"text":" ","type":"text"},{"text":"such as a tab in a tab bar.","type":"text"}],"navigatorTitle":[{"text":"FullScreenView","kind":"identifier"}],"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FullScreenView","url":"\/documentation\/feltembeddedcare\/fullscreenview"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/EmbeddedCare/handleURL(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleURL"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/handleURL(_:)","kind":"symbol","role":"symbol","title":"handleURL(_:)","abstract":[{"type":"text","text":"In your app’s open url handling code, call this to check if the url deep-links to embedded care content."}],"url":"\/documentation\/feltembeddedcare\/embeddedcare\/handleurl(_:)","type":"topic"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/EmbeddedCare/handleNotification(_:)":{"url":"\/documentation\/feltembeddedcare\/embeddedcare\/handlenotification(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleNotification","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UNNotification","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UNNotification"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/handleNotification(_:)","abstract":[{"text":"In your app’s push notification handling code, call this to check if the notification deep-links to embedded care content.","type":"text"}],"title":"handleNotification(_:)"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/EmbeddedCare/checkFeatureGate(_:)":{"kind":"symbol","role":"symbol","title":"checkFeatureGate(_:)","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/checkFeatureGate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkFeatureGate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:16FeltEmbeddedCare11FeatureGateO","text":"FeatureGate"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/feltembeddedcare\/embeddedcare\/checkfeaturegate(_:)","abstract":[{"text":"Check whether the specified feature date is enabled for the current user.","type":"text"},{"text":" ","type":"text"},{"text":"This version takes a known ","type":"text"},{"code":"FeatureGate","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/EmbeddedCare/shared":{"role":"symbol","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/EmbeddedCare\/shared","url":"\/documentation\/feltembeddedcare\/embeddedcare\/shared","type":"topic","title":"shared","abstract":[{"type":"text","text":"This singleton servers as the primary interaction point with Felt’s embedded care features"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16FeltEmbeddedCare0bC0C","kind":"typeIdentifier","text":"EmbeddedCare"}],"kind":"symbol"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare":{"identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare","type":"topic","url":"\/documentation\/feltembeddedcare","abstract":[],"role":"collection","title":"FeltEmbeddedCare","kind":"symbol"},"doc://clinic.felt.EmbeddedCare/documentation/FeltEmbeddedCare/FullScreenViewController":{"role":"symbol","url":"\/documentation\/feltembeddedcare\/fullscreenviewcontroller","title":"FullScreenViewController","navigatorTitle":[{"kind":"identifier","text":"FullScreenViewController"}],"kind":"symbol","identifier":"doc:\/\/clinic.felt.EmbeddedCare\/documentation\/FeltEmbeddedCare\/FullScreenViewController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenViewController"}],"type":"topic","abstract":[{"type":"text","text":"A "},{"code":"UIViewController","type":"codeVoice"},{"type":"text","text":" used to integrate Felt’s embedded care content."},{"type":"text","text":" "},{"type":"text","text":"The view controller is meant to be presented modally or in a way that takes up the majority of your app’s UI,"},{"type":"text","text":" "},{"type":"text","text":"such as a tab in a tab bar."}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null}]}]}